dimnames(testMat)<-list(C=C,gamma=gamma)
dimnames(cvMat)<-list(C=C,gamma=gamma)
cvMat
for (i in sigma){
for (j in C){
print(i)
print(j)
svm<-ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=j,kpar=list(i))
cv<-append(cv,cross(svm))
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
test<-append(test,errorRate)
}
}
#qplot(kc100[,1],kc400[,2],color=kc100[,3])
cvMat<-matrix(cv,nrow=length(gamma),ncol=length(C),byrow=F)
testMat<-matrix(test,nrow=length(gamma),ncol=length(C),byrow=F)
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
print(testMat)
dimnames(cvMat)<-list(gamma=gamma,C=C)
dimnames(testMat)<-list(gamma=gamma,C=C)
print(testMat)
cvMat<-matrix(cv,nrow=length(gamma),ncol=length(C),byrow=T)
testMat<-matrix(test,nrow=length(gamma),ncol=length(C),byrow=T)
dimnames(cvMat)<-list(gamma=gamma,C=C)
dimnames(testMat)<-list(gamma=gamma,C=C)
print(testMat)
cvMat<-matrix(cv,nrow=length(C),ncol=length(gamma),byrow=T)
testMat<-matrix(test,nrow=length(C),ncol=length(gmma),byrow=T)
dimnames(cvMat)<-list(gamma=gamma,C=C)
dimnames(testMat)<-list(gamma=gamma,C=C)
print(testMat)
testMat
test
cvMat<-matrix(cv,nrow=length(C),ncol=length(gamma),byrow=F)
testMat<-matrix(test,nrow=length(C),ncol=length(gmma),byrow=F)
dimnames(cvMat)<-list(gamma=gamma,C=C)
dimnames(testMat)<-list(gamma=gamma,C=C)
print(testMat)
testMat<-matrix(test,nrow=length(C),ncol=length(gmma),byrow=T)
testMat<-matrix(test,nrow=length(C),ncol=length(gamma),byrow=T)
print(testMat)
dimnames(testMat)<-list(gamma=gamma,C=C)
print(testMat)
#
dimnames(testMat)<-list(C=C,gamma=gamma)
testMat
cvMat<-matrix(cv,nrow=length(C),ncol=length(gamma),byrow=F)
testMat<-matrix(test,nrow=length(C),ncol=length(gamma),byrow=F)
dimnames(cvMat)<-list(gamma=gamma,C=C)
dimnames(testMat)<-list(C=C,gamma=gamma)
print(testMat)
sigma[7]
gamma[7]
gamma[9]
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10,kpar=sigma[9]))
ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=j,kpar=list(i))
ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(i))
ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[9]))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[9])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[5])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[2])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[2])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[4])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[7])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[7])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[6])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[9])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=5,kpar=list(sigma[1])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1,kpar=list(sigma[1])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=100,kpar=list(sigma[1])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(sigma[1])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(sigma[6])),data=kc100)
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(sigma[9])),data=kc100)
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(sigma[9])))
cvMat
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10000,kpar=list(sigma[9])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10000,kpar=list(sigma[1])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10000,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10000,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10000,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10000,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=10000,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1,kpar=list(sigma[5])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1,kpar=list(gamma[5])))
a<-data.frame()
a$rbind(c(3,4,5,6))
rbind(c(3,4,5,6),a)
rbind(c(3,4,3,6),a)
rbind(c(3,4,3,1),a)
a<-data.frame()
rbind(a,c(1,2,3,4))
rbind(a,c(4,5,6,7))
a
rbind(a,c(4,5,6,7))
a<-rbind(a,c(4,5,6,7))
a<-rbind(a,c(1,3,5,0))
a
frame<-data.frame(c('C','gamma','cv.error','test.error'))
frame
frame<-data.frame('C','gamma','cv.error','test.error')
frame
colnames(frame)<-c('C','gamma','cv.error','test.error')
frame
frame
frame<-data.frame()
frame
colnames(frame)<-c('C','gamma','cv.error','test.error')
frame
cv<-vector()
test<-vector()
frame<-data.frame()
for (i in sigma){
for (j in C){
print(i)
print(j)
svm<-ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=j,kpar=list(i))
cv<-append(cv,cross(svm))
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
test<-append(test,errorRate)
frame<-rbind(c(j,i,cross(svm),errorRate))
}
}
frame
cv<-vector()
test<-vector()
frame<-data.frame()
for (i in sigma){
for (j in C){
print(i)
print(j)
svm<-ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=j,kpar=list(i))
cv<-append(cv,cross(svm))
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
test<-append(test,errorRate)
frame<-rbind(frame,c(j,i,cross(svm),errorRate))
}
}
colnames(frame)<-c('C','gamma','cv.error','test.error')
frame
cv
test
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(1000)))
cv<-vector()
test<-vector()
frame<-data.frame()
gamma
sigma
sigma[0]
sigma[1]
C
C<-c(0.1,1,10,100,1000,10000)
#gamma<-seq(0.1,10,length.out=7)
gamma<-c(0.01,0.05,0.1,1,3,5,7,100,1000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
cv<-vector()
test<-vector()
frame<-data.frame()
#cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(1000)))
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=C[i],kpar=list(sigma[i]))
cv<-append(cv,cross(svm))
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
test<-append(test,errorRate)
frame<-rbind(frame,c(C[j],gamma[i],cross(svm),errorRate))
}
}
colnames(frame)<-c('C','gamma','cv.error','test.error')
frame
sigma
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(7)))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=1000,kpar=list(0.0223)))
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
rm(list=ls())
require(ggplot2)
require(kernlab)
setwd('~/github/StatML/Assignment3')
kc100<-read.table('./Data/knollC-train100.dt')
kc100$V3<-as.factor(kc100$V3)
kc200<-read.table('./Data/knollC-train200.dt')
kc200$V3<-as.factor(kc200$V3)
kc400<-read.table('./Data/knollC-train400.dt')
kc400$V3<-as.factor(kc400$V3)
kcTest<-read.table('../Assignment2/Data/knollC-test.dt')
C<-c(0.1,1,10,100,1000,10000)
#gamma<-seq(0.1,10,length.out=7)
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
cv<-vector()
test<-vector()
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc400,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
cvMat
rm(list=ls())
require(ggplot2)
require(kernlab)
setwd('~/github/StatML/Assignment3')
kc100<-read.table('./Data/knollC-train100.dt')
kc100$V3<-as.factor(kc100$V3)
kc200<-read.table('./Data/knollC-train200.dt')
kc200$V3<-as.factor(kc200$V3)
kc400<-read.table('./Data/knollC-train400.dt')
kc400$V3<-as.factor(kc400$V3)
kcTest<-read.table('../Assignment2/Data/knollC-test.dt')
C<-c(0.1,1,10,100,1000,10000)
#gamma<-seq(0.1,10,length.out=7)
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
cv<-vector()
test<-vector()
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc200,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
require(ggplot2)
rm(list=ls())
setwd('~/github/StatML/Assignment3')
nDataTrain<-read.table('./Data/sincTrain50.dt')
qplot(nDataTrain[,1],nDataTrain[,2])+geom_line()
#dim(matrix(runif(100),50,2)%*%matrix(1,2,100))
sigma<-function(u){u/(1+abs(u))}
#initialize
x_init<-rbind(1,nDataTrain[,1]) #one col per training exmaple
w1<-matrix(runif(2),1,2) #w^(1)
w2<-matrix(runif(2),1,2) #w^(2)
#forward propagation
z2<-w1%*%x_init
a2<-rbind(1,sapply(z2,sigma))
z3<-w2%*%a2
y<-sapply(z3,sigma)
#back propagation
#2.1 Model selection using grid search:
rm(list=ls())
require(ggplot2)
require(kernlab)
setwd('~/github/StatML/Assignment3')
kc100<-read.table('./Data/knollC-train100.dt')
kc100$V3<-as.factor(kc100$V3)
kc200<-read.table('./Data/knollC-train200.dt')
kc200$V3<-as.factor(kc200$V3)
kc400<-read.table('./Data/knollC-train400.dt')
kc400$V3<-as.factor(kc400$V3)
kcTest<-read.table('../Assignment2/Data/knollC-test.dt')
C<-c(0.1,1,10,100,1000,10000)
#gamma<-seq(0.1,10,length.out=7)
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
cv<-vector()
test<-vector()
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
cvMat
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc200,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
cv<-vector()
test<-vector()
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc200,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
min(cvMat)
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
cv<-vector()
test<-vector()
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc200,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
min(cvMat)
?ksvm
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
errMat<-matrix(0,length(C),length(sigma))
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
dimnames(errMat)<-list(C=C,gamma=gamma)
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc200,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
errMat[j,i]<-error(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
errMat
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
cv<-vector()
test<-vector()
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
errMat<-matrix(0,length(C),length(sigma))
dimnames(cvMat)<-list(C=C,gamma=gamma)
dimnames(testMat)<-list(C=C,gamma=gamma)
dimnames(errMat)<-list(C=C,gamma=gamma)
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc200,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
errMat[j,i]<-error(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
print(testMat)
print(cvMat)
print(errMat)
?ksvm
finalModel<-ksvm(V3~.,data=kc100,kernel='rbfdot',C=1,kpar=list(sigma[4]))
plot(finalModel,data=kc100)
aIndex<-alphaindex(finalModel)
for (i in aIndex){
x<-kc100[i,1]
y<-kc100[i,2]
points(y,x,col="red")
}
points(0,0,col="blue")
finalModel<-ksvm(V3~.,data=kc100,kernel='rbfdot',C=1,kpar=list(sigma[4]))
plot(finalModel,data=kc100)
plot(finalModel,data=kc100)
alphaindex(finalModel)
?ksvm
alpha(finalModel)
alphaindex(finalModel)
length(alphaindex(finalModel))
length(alphaindex(finalModel)[[1]])
length(alpha(finalModel)[[1]])
alpha(ksvm(V3~.,data=kc100,kernel='rbfdot',C=1000,kpar=list(sigma[4])))
alpha(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.0001,kpar=list(sigma[4])))
alpha(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.001,kpar=list(sigma[4])))
alphaindex(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.001,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.001,kpar=list(sigma[4])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.001,kpar=list(sigma[4])))
cross(ksvm(V3~.,data=kc100,kernel='rbfdot',cross=5,C=0.001,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.001,kpar=list(sigma[4])))
gamma[4]
###2.2.2
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=100,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.100,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=100,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.100,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=100,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=0.100,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=1,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=1,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=1,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=1,kpar=list(sigma[4])))
sigma
sigma[4]
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=10,kpar=list(sigma[4])))
ksvm(V3~.,data=kc100,kernel='rbfdot',C=10,kpar=list(sigma[4]))
largeC<-ksvm(V3~.,data=kc200,kernel='rbfdot',C=100,kpar=list(sigma[4]))
smallC<-ksvm(V3~.,data=kc200,kernel='rbfdot',C=0.01,kpar=list(sigma[4]))
plot(largeC,data=kc200)  #mostly unbound
plot(smallC,data=kc200)  #all bound #plot supportvectors
plot(largeC,data=kc200)  #mostly unbound
plot(smallC,data=kc200)  #all bound #plot supportvectors
plot(ksvm(V3~.,data=kc100,kernel='rbfdot',C=10,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=10,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=10,kpar=list(sigma[4])))
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=10,kpar=list(sigma[4])),data=kc200)
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=100,kpar=list(sigma[4])),data=kc200)
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=1000,kpar=list(sigma[4])),data=kc200)
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=1000000,kpar=list(sigma[4])),data=kc200)
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=0.00000001000000,kpar=list(sigma[4])),data=kc200)
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=1000,kpar=list(sigma[4])),data=kc200)
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=0.001,kpar=list(sigma[4])),data=kc200)
plot(ksvm(V3~.,data=kc200,kernel='rbfdot',C=100,kpar=list(sigma[4])),data=kc200)
prediction<-predict(largeC,kcTest[,c(1,2)])
predictionTest<-prediction==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
print(errorRate)
prediction<-predict(smallC,kcTest[,c(1,2)])
predictionTest<-prediction==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
print(errorRate)
require(ggplot2)
rm(list=ls())
setwd('~/github/StatML/Assignment3')
nDataTrain<-read.table('./Data/sincTrain50.dt')
qplot(nDataTrain[,1],nDataTrain[,2])+geom_line()
rm(list=ls())
require(ggplot2)
require(kernlab)
setwd('~/github/StatML/Assignment3')
kc100<-read.table('./Data/knollC-train100.dt')
kc100$V3<-as.factor(kc100$V3)
kc200<-read.table('./Data/knollC-train200.dt')
kc200$V3<-as.factor(kc200$V3)
kc400<-read.table('./Data/knollC-train400.dt')
kc400$V3<-as.factor(kc400$V3)
kcTest<-read.table('../Assignment2/Data/knollC-test.dt')
C<-c(0.1,1,10,100,1000,10000)
gamma<-c(0.00001,0.01,0.05,1,3,7,10000)
sigma<-sapply(gamma,function(x){sqrt(1/(2*x))})
sigma
cv<-vector()
test<-vector()
cvMat<-matrix(0,length(C),length(sigma))
testMat<-matrix(0,length(C),length(sigma))
errMat<-matrix(0,length(C),length(sigma))
for (i in 1:length(sigma)){
for (j in 1:length(C)){
svm<-ksvm(V3~.,data=kc200,kernel='rbfdot',cross=5,C=C[j],kpar=list(sigma=sigma[i]))
cvMat[j,i]<-cross(svm)
errMat[j,i]<-error(svm)
prediction<-predict(svm,kcTest[,c(1,2)])
predictionTest<-as.numeric(levels(prediction))[prediction]==kcTest[,3]
errorRate<-1-sum(predictionTest)/length(predictionTest)
testMat[j,i]<-errorRate
}
}
cvMat
print(testMat)
print(cvMat)
print(errMat)
